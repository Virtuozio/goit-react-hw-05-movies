{"version":3,"file":"static/js/931.56c40ce8.chunk.js","mappings":"8SAEMA,EAAU,mCACHC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,gEACoCF,IAH/B,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,MAAR,MAP4B,yDAAH,qDAUhBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDS,IAH7C,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAUfG,EAAa,mCAAG,WAAMC,GAAN,gGAEFT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBAC+BX,IAH7B,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,MAAR,MAPyB,yDAAH,sDAUbK,EAAY,mCAAG,WAAMD,GAAN,gGAEDT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,gCAOxBP,QAAQC,MAAR,MAPwB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,qD,oFC1CfQ,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKT,IAAMW,MAAO,CAAEC,KAAMN,GAA/C,SACGG,EAAKI,SAFDJ,EAAKT,GADD,KASpB,C,wKCZYc,EAAUC,EAAAA,GAAAA,KAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,uGAKLE,EAASF,EAAAA,GAAAA,OAAH,4GAMNG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,+F,SCnBJK,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3C,OACE,UAACT,EAAD,CAASS,SAAUA,EAAnB,WACE,SAACL,EAAD,KACA,SAACF,EAAD,CAAOQ,KAAK,OAAOH,MAAOA,EAAOC,SAAUA,KAC3C,SAACL,EAAD,CAAQO,KAAK,aAGlB,E,QC2CD,EAhDe,WAAO,IAAD,EACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAO3B,EAAP,KAAc6B,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAC9CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,WAAMpC,GAAN,mGAEHD,EAAAA,EAAAA,IAAgBC,GAFb,OAEjBO,EAFiB,OAGjB8B,EAAO9B,EAAMG,KAAI,gBAAGK,EAAH,EAAGA,MAAH,MAAoB,CACzCb,GADqB,EAAUA,GAE/Ba,MAAAA,EAFqB,IAIvBa,EAASS,GAPc,gDASvBxC,QAAQC,MAAR,MATuB,yDAAH,sDAYxBsC,EAAmBH,EACpB,GAAE,CAACA,IAEJ,IAAMK,EAAe/B,EAAMgC,QAAO,SAAA5B,GAAI,OACpCA,EAAKI,MAAMyB,cAAcC,SAASR,EAASO,cADP,IAgBtC,OACE,6BACE,SAAClB,EAAD,CACEC,MAAOvB,EACPwB,SARe,SAAAkB,GACnBb,EAASa,EAAEC,OAAOpB,MACnB,EAOKE,SAjBoB,SAAAiB,GACxBA,EAAEE,iBACF,IAAMC,EAAOH,EAAEI,cAEfd,EAD6B,KAAVhC,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAE/C0C,EAAEC,OAAOI,QACTF,EAAKE,OACN,KAYG,SAACzC,EAAA,EAAD,CAAUC,MAAO+B,MAGtB,C","sources":["MovieAPI.js","components/FilmList.jsx","components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ac13a6e4c030357e0a4de2fb59da064';\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.form`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px 0 0 4px;\n  font: inherit;\n`;\nexport const Button = styled.button`\n  padding: 26px 32px 8px 8px;\n  border-radius: 0 4px 4px 0;\n  border-left: none;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","// import { useState } from 'react';\nimport { Wrapper, Input, Icon, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange, onSubmit }) => {\n  return (\n    <Wrapper onSubmit={onSubmit}>\n      <Icon />\n      <Input type=\"text\" value={value} onChange={onChange} />\n      <Button type=\"submit\" />\n    </Wrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FilmList } from '../components/FilmList';\nimport { SearchBox } from '../components/SearchBox';\nimport { getMoviesByName } from '../MovieAPI';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('query') ?? '';\n  useEffect(() => {\n    const fetchFilmsBySearch = async query => {\n      try {\n        const films = await getMoviesByName(query);\n        const sort = films.map(({ title, id }) => ({\n          id,\n          title,\n        }));\n        setFilms(sort);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchFilmsBySearch(filmName);\n  }, [filmName]);\n\n  const visibleFilms = films.filter(film =>\n    film.title.toLowerCase().includes(filmName.toLowerCase())\n  );\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    e.target.reset();\n    form.reset();\n  };\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <SearchBox\n        value={query}\n        onChange={handleChange}\n        onSubmit={updateQueryString}\n      />\n      <FilmList films={visibleFilms} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","getTrendingFilms","axios","response","data","results","console","error","getMoviesByName","query","getMoviesById","id","getMovieCast","cast","getMovieReviews","FilmList","films","location","useLocation","map","film","to","state","from","title","Wrapper","styled","Input","Button","Icon","HiSearch","SearchBox","value","onChange","onSubmit","type","useState","setFilms","setQuery","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","fetchFilmsBySearch","sort","visibleFilms","filter","toLowerCase","includes","e","target","preventDefault","form","currentTarget","reset"],"sourceRoot":""}