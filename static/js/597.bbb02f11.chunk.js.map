{"version":3,"file":"static/js/597.bbb02f11.chunk.js","mappings":"8SAEMA,EAAU,mCACHC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,gEACoCF,IAH/B,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,MAAR,MAP4B,yDAAH,qDAUhBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDS,IAH7C,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAUfG,EAAa,mCAAG,WAAMC,GAAN,gGAEFT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBAC+BX,IAH7B,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,MAAR,MAPyB,yDAAH,sDAUbK,EAAY,mCAAG,WAAMD,GAAN,gGAEDT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,gCAOxBP,QAAQC,MAAR,MAPwB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,qD,wGCG5B,UA3Ca,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAkBR,OAjBAO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMR,GAAN,mGAEKC,EAAAA,EAAAA,IAAaD,GAFlB,OAEbS,EAFa,OAGbC,EAAOD,EAAUE,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAd,MAA4C,CACrEb,GADyB,EAAoBA,GAE7CY,UAAAA,EACAC,KAAAA,EACAC,QAJyB,EAAwBC,aAAxB,IAM3BV,EAAQK,GATW,gDAWnBf,QAAQC,MAAR,MAXmB,yDAAH,sDAcpBY,EAAeR,EAChB,GAAE,CAACA,KAEF,8BACE,wBACGE,EACGA,EAAKS,KAAI,SAAAK,GAAK,OACZ,2BACE,gBACEC,IACED,EAAMF,QAAN,yCACsCE,EAAMF,SACxC,wDAENI,IAAKF,EAAMH,QAEb,uBAAIG,EAAMH,QACV,uCAAeG,EAAMJ,eAVdI,EAAMhB,GADH,IAcd,oBAIX,C","sources":["MovieAPI.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ac13a6e4c030357e0a4de2fb59da064';\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { getMovieCast } from 'MovieAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchMovieCast = async id => {\n      try {\n        const movieCast = await getMovieCast(id);\n        const sort = movieCast.map(({ character, name, id, profile_path }) => ({\n          id,\n          character,\n          name,\n          profile: profile_path,\n        }));\n        setCast(sort);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieCast(id);\n  }, [id]);\n  return (\n    <section>\n      <ul>\n        {cast\n          ? cast.map(actor => (\n              <li key={actor.id}>\n                <img\n                  src={\n                    actor.profile\n                      ? `https://image.tmdb.org/t/p/w200${actor.profile}`\n                      : 'https://via.placeholder.com/100x150.png?text=No+Image'\n                  }\n                  alt={actor.name}\n                />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            ))\n          : 'NO INFORMATION'}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n"],"names":["API_KEY","getTrendingFilms","axios","response","data","results","console","error","getMoviesByName","query","getMoviesById","id","getMovieCast","cast","getMovieReviews","useState","setCast","useParams","useEffect","fetchMovieCast","movieCast","sort","map","character","name","profile","profile_path","actor","src","alt"],"sourceRoot":""}