{"version":3,"file":"static/js/70.76557204.chunk.js","mappings":"8SAEMA,EAAU,mCACHC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,gEACoCF,IAH/B,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,MAAR,MAP4B,yDAAH,qDAUhBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDS,IAH7C,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAUfG,EAAa,mCAAG,WAAMC,GAAN,gGAEFT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBAC+BX,IAH7B,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,MAAR,MAPyB,yDAAH,sDAUbK,EAAY,mCAAG,WAAMD,GAAN,gGAEDT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,gCAOxBP,QAAQC,MAAR,MAPwB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,qD,mJC1CfQ,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAE,OACX,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAGT,IAAMW,MAAO,CAAEC,KAAMN,GAArC,SACGG,EAAGI,SAFCJ,EAAGT,GADD,KASlB,E,2BCbYc,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+FAMLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+FCfJI,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,MAIlB,E,SC+BD,EAtCe,WAAO,IAAD,EACnB,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOpB,EAAP,KAAcqB,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQ,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAC9CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,WAAMnC,GAAN,mGAEHD,EAAAA,EAAAA,IAAgBC,GAFb,OAEjBO,EAFiB,OAGvBV,QAAQuC,IAAI7B,GACN8B,EAAO9B,EAAMG,KAAI,gBAAGK,EAAH,EAAGA,MAAH,MAAoB,CACzCb,GADqB,EAAUA,GAE/Ba,MAAAA,EAFqB,IAIvBlB,QAAQuC,IAAIC,GACZT,EAASS,GATc,kDAWvBxC,QAAQC,MAAR,MAXuB,0DAAH,sDAcxBqC,EAAmBH,EACpB,GAAE,CAACA,IAEJ,IAAMM,EAAe/B,EAAMgC,QAAO,SAAAC,GAAI,OACpCA,EAAKzB,MAAM0B,cAAcC,SAASV,EAASS,cADP,IAStC,OACE,6BACE,SAACpB,EAAD,CAAWC,MAAOU,EAAUT,SAPN,SAAAvB,GAExB+B,EAD6B,KAAV/B,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAKG,SAACM,EAAD,CAAUC,MAAO+B,MAGtB,C","sources":["fakeAPI.js","components/FilmList.jsx","components/SearchBox.styled.js","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ac13a6e4c030357e0a4de2fb59da064';\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(el => (\n        <li key={el.id}>\n          <Link to={`${el.id}`} state={{ from: location }}>\n            {el.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FilmList } from '../components/FilmList';\nimport { SearchBox } from '../components/SearchBox';\nimport { getMoviesByName } from '../fakeAPI';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('query') ?? '';\n  useEffect(() => {\n    const fetchFilmsBySearch = async query => {\n      try {\n        const films = await getMoviesByName(query);\n        console.log(films);\n        const sort = films.map(({ title, id }) => ({\n          id,\n          title,\n        }));\n        console.log(sort);\n        setFilms(sort);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchFilmsBySearch(filmName);\n  }, [filmName]);\n\n  const visibleFilms = films.filter(film =>\n    film.title.toLowerCase().includes(filmName.toLowerCase())\n  );\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox value={filmName} onChange={updateQueryString} />\n      <FilmList films={visibleFilms} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","getTrendingFilms","axios","response","data","results","console","error","getMoviesByName","query","getMoviesById","id","getMovieCast","cast","getMovieReviews","FilmList","films","location","useLocation","map","el","to","state","from","title","Wrapper","styled","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","useState","setFilms","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","fetchFilmsBySearch","log","sort","visibleFilms","filter","film","toLowerCase","includes"],"sourceRoot":""}