{"version":3,"file":"static/js/681.a65d1bba.chunk.js","mappings":"yNAsCA,UAlCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAkBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMH,GAAN,mGAEKI,EAAAA,EAAAA,IAAgBJ,GAFrB,OAEhBK,EAFgB,OAGtBC,QAAQC,IAAIF,GACNG,EAAOH,EAAaI,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,MAA8B,CAC1DX,GAD4B,EAAoBA,GAEhDU,OAAAA,EACAC,QAAAA,EAH4B,IAK9BZ,EAAWS,GATW,gDAWtBF,QAAQM,MAAR,MAXsB,yDAAH,sDAcvBT,EAAkBH,EACnB,GAAE,CAACA,KAEF,6BACGF,EACGA,EAAQW,KAAI,SAAAI,GAAM,OAChB,2BACE,oCAAYA,EAAOH,WAEnB,uBAAIG,EAAOF,YAHJE,EAAOb,GADA,IAOlB,kBAGT,C,+LCnCKc,EAAU,mCACHC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,gEACoCF,IAH/B,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5Bb,QAAQM,MAAR,MAP4B,yDAAH,qDAUhBQ,EAAe,mCAAG,WAAMC,GAAN,gGAEJL,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDO,IAH7C,cAErBJ,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3Bb,QAAQM,MAAR,MAP2B,yDAAH,sDAUfU,EAAa,mCAAG,WAAMtB,GAAN,gGAEFgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,oBAC+Bc,IAH7B,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBZ,QAAQM,MAAR,MAPyB,yDAAH,sDAUbW,EAAY,mCAAG,WAAMvB,GAAN,gGAEDgB,EAAAA,EAAAA,IAAA,8CACkBhB,EADlB,4BACwCc,EADxC,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKM,MALG,gCAOxBlB,QAAQM,MAAR,MAPwB,yDAAH,sDAWZR,EAAe,mCAAG,WAAMJ,GAAN,gGAEJgB,EAAAA,EAAAA,IAAA,8CACkBhB,EADlB,4BACwCc,EADxC,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3Bb,QAAQM,MAAR,MAP2B,yDAAH,qD","sources":["components/Reviews.jsx","fakeAPI.js"],"sourcesContent":["import { getMovieReviews } from 'fakeAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    const fetchMovieReviews = async id => {\n      try {\n        const movieReviews = await getMovieReviews(id);\n        console.log(movieReviews);\n        const sort = movieReviews.map(({ author, content, id }) => ({\n          id,\n          author,\n          content,\n        }));\n        setReviews(sort);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieReviews(id);\n  }, [id]);\n  return (\n    <section>\n      {reviews\n        ? reviews.map(review => (\n            <li key={review.id}>\n              <b>Author: {review.author}</b>\n\n              <p>{review.content}</p>\n            </li>\n          ))\n        : 'NO INFORMATION'}\n    </section>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '8ac13a6e4c030357e0a4de2fb59da064';\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchMovieReviews","getMovieReviews","movieReviews","console","log","sort","map","author","content","error","review","API_KEY","getTrendingFilms","axios","response","data","results","getMoviesByName","query","getMoviesById","getMovieCast","cast"],"sourceRoot":""}