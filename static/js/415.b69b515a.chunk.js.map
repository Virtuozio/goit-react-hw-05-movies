{"version":3,"file":"static/js/415.b69b515a.chunk.js","mappings":"+SAEMA,EAAU,mCACHC,EAAgB,mCAAG,6GAELC,EAAAA,EAAAA,IAAA,gEACoCF,IAH/B,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,MAAR,MAP4B,yDAAH,qDAUhBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACiDS,IAH7C,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,sDAUfG,EAAa,mCAAG,WAAMC,GAAN,gGAEFT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBAC+BX,IAH7B,cAEnBG,EAFmB,yBAKlBA,EAASC,MALS,gCAOzBE,QAAQC,MAAR,MAPyB,yDAAH,sDAUbK,EAAY,mCAAG,WAAMD,GAAN,gGAEDT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFC,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKS,MALG,gCAOxBP,QAAQC,MAAR,MAPwB,yDAAH,sDAWZO,EAAe,mCAAG,WAAMH,GAAN,gGAEJT,EAAAA,EAAAA,IAAA,8CACkBS,EADlB,4BACwCX,EADxC,oBAFI,cAErBG,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,MAAR,MAP2B,yDAAH,qD,wGCR5B,UAjCa,WACX,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,gHAEKlB,EAAAA,EAAAA,MAFL,OAEjBmB,EAFiB,OAGvBd,QAAQe,IAAID,GACNE,EAAOF,EAAcG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,MAA0B,CACvDd,GAD6B,EAAgBA,GAE7Ca,MAAOA,GAASC,EAFa,IAI/BnB,QAAQe,IAAIC,GACZL,EAASK,GATc,kDAWvBhB,QAAQC,MAAR,MAXuB,0DAAH,qDAcxBY,GACD,GAAE,KAGD,6BACE,4CACA,wBACGH,EAAMO,KAAI,SAAAG,GAAE,OACX,yBACE,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAGf,IAAvB,SAA8Be,EAAGF,SAD1BE,EAAGf,GADD,QAQpB,C","sources":["fakeAPI.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8ac13a6e4c030357e0a4de2fb59da064';\nexport const getTrendingFilms = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesByName = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const getMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { getTrendingFilms } from 'fakeAPI';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const fetchTrendingFilms = async () => {\n      try {\n        const trendingFilms = await getTrendingFilms();\n        console.log(trendingFilms);\n        const sort = trendingFilms.map(({ title, name, id }) => ({\n          id,\n          title: title || name,\n        }));\n        console.log(sort);\n        setFilms(sort);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTrendingFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <ul>\n        {films.map(el => (\n          <li key={el.id}>\n            <Link to={`movies/${el.id}`}>{el.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\nexport default Home;\n"],"names":["API_KEY","getTrendingFilms","axios","response","data","results","console","error","getMoviesByName","query","getMoviesById","id","getMovieCast","cast","getMovieReviews","useState","films","setFilms","useEffect","fetchTrendingFilms","trendingFilms","log","sort","map","title","name","el","to"],"sourceRoot":""}